/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    int solve(TreeNode* root, unordered_set<int>& set, vector<TreeNode*>& res) {
        if(root == NULL) return 0;
        int left = solve(root->left, set, res);
        int right = solve(root->right, set, res);
        if(left == -1) root->left = NULL;
        if(right == -1) root->right = NULL;
        if(set.find(root->val) != set.end()) {
            if(root->left) res.push_back(root->left);
            if(root->right) res.push_back(root->right);
            root->left = NULL;
            root->right = NULL;
            return -1;
        }
        else return 0;
    }
public:
    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& to_delete) {
        unordered_set<int> set(to_delete.begin(), to_delete.end());
        vector<TreeNode*> res;
        solve(root, set, res);
        if(set.find(root->val) == set.end()) res.push_back(root);
        return res;
    }
};
